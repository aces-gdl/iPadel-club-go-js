{"version":3,"file":"static/js/557.b7882f39.chunk.js","mappings":"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","sources":["layout/MainCard.js","pages/ImageRemovePage.js","../node_modules/@mui/system/esm/styled/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/system/esm/useThemeProps/getThemeProps.js","../node_modules/@mui/system/esm/useThemeProps/useThemeProps.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 25,\n                    ':hover': {\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {title && \n                    ( <CardHeader sx={headerSX} title={ darkTitle? <Typography variant=\"h3\">{title}</Typography> : title } action={secondary} /> )\n                } \n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  Select,\n  MenuItem,\n  Button,\n  Box,\n  Typography,\n  Container,\n  Paper,\n  Snackbar,\n  Alert,\n} from '@mui/material';\nimport MainCard from '../layout/MainCard';\n\nconst ImageRemovePage = () => {\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState('');\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n\n  useEffect(() => {\n    fetchImages();\n  }, []);\n\n  const fetchImages = async () => {\n    try {\n      const response = await axios.get('/v1/images/list');\n      setImages(response.data.images);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n      setSnackbar({ open: true, message: 'Error al cargar las imágenes', severity: 'error' });\n    }\n  };\n\n  const handleImageChange = (event) => {\n    setSelectedImage(event.target.value);\n  };\n\n  const handleDeleteImage = async () => {\n    if (!selectedImage) {\n      setSnackbar({ open: true, message: 'Por favor, selecciona una imagen', severity: 'warning' });\n      return;\n    }\n\n    try {\n      await axios.delete(`/v1/images/${selectedImage}`);\n      setSnackbar({ open: true, message: 'Imagen eliminada con éxito', severity: 'success' });\n      setSelectedImage('');\n      fetchImages(); // Refresh the list of images\n    } catch (error) {\n      console.error('Error deleting image:', error);\n      setSnackbar({ open: true, message: 'Error al eliminar la imagen', severity: 'error' });\n    }\n  };\n\n  return (\n    <MainCard title=\"Eliminar Imagen\" minHeight={'300px'}>\n      <Container maxWidth=\"sm\">\n        <Paper elevation={3} style={{ padding: '2rem', marginTop: '2rem' }}>\n          <Box mb={2}>\n            <Typography variant=\"h6\">Selecciona una imagen para eliminar:</Typography>\n          </Box>\n          <Select\n            fullWidth\n            value={selectedImage}\n            onChange={handleImageChange}\n            displayEmpty\n          >\n            <MenuItem value=\"\" disabled>\n              Selecciona una imagen\n            </MenuItem>\n            {images.map((image) => (\n              <MenuItem key={image} value={image}>\n                {image}\n              </MenuItem>\n            ))}\n          </Select>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            fullWidth\n            onClick={handleDeleteImage}\n            style={{ marginTop: '1rem' }}\n          >\n            Eliminar Imagen\n          </Button>\n        </Paper>\n      </Container>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n      >\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </MainCard>\n  );\n};\n\nexport default ImageRemovePage;","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from '@mui/utils/capitalize';\nimport useThemePropsSystem from \"../useThemeProps/index.js\";\nimport systemStyled from \"../styled/index.js\";\nimport createTheme from \"../createTheme/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from \"../utils/capitalize.js\";\nimport styled from \"../styles/styled.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useDefaultProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import resolveProps from '@mui/utils/resolveProps';\nexport default function getThemeProps(params) {\n  const {\n    theme,\n    name,\n    props\n  } = params;\n  if (!theme || !theme.components || !theme.components[name] || !theme.components[name].defaultProps) {\n    return props;\n  }\n  return resolveProps(theme.components[name].defaultProps, props);\n}","'use client';\n\nimport getThemeProps from \"./getThemeProps.js\";\nimport useTheme from \"../useTheme/index.js\";\nexport default function useThemeProps({\n  props,\n  name,\n  defaultTheme,\n  themeId\n}) {\n  let theme = useTheme(defaultTheme);\n  if (themeId) {\n    theme = theme[themeId] || theme;\n  }\n  return getThemeProps({\n    theme,\n    name,\n    props\n  });\n}"],"names":["headerSX","mr","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","_objectWithoutProperties","_excluded","theme","useTheme","_jsxs","Card","_objectSpread","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","ImageRemovePage","images","setImages","useState","selectedImage","setSelectedImage","snackbar","setSnackbar","open","message","severity","useEffect","fetchImages","async","response","axios","get","data","error","console","MainCard","minHeight","Container","maxWidth","Paper","elevation","style","padding","marginTop","Box","mb","Select","fullWidth","value","onChange","event","target","displayEmpty","MenuItem","disabled","map","image","Button","color","onClick","delete","concat","Snackbar","autoHideDuration","onClose","Alert","createStyled","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","options","arguments","length","undefined","createStyledComponent","useThemeProps","componentName","ContainerRoot","width","marginLeft","boxSizing","marginRight","paddingLeft","spacing","paddingRight","breakpoints","up","_ref2","Object","keys","values","reduce","acc","breakpointValueKey","breakpoint","unit","_ref3","Math","max","xs","React","component","classes","classesProp","other","useUtilityClasses","slots","composeClasses","generateUtilityClass","as","clsx","createContainer","styled","useDefaultProps","getThemeProps","params","components","defaultProps","resolveProps","themeId"],"sourceRoot":""}