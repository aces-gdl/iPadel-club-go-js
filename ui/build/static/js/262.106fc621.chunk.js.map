{"version":3,"file":"static/js/262.106fc621.chunk.js","mappings":"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","sources":["layout/MainCard.js","components/EventCarousel.js","pages/EventRegistration.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 25,\n                    ':hover': {\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {title && \n                    ( <CardHeader sx={headerSX} title={ darkTitle? <Typography variant=\"h3\">{title}</Typography> : title } action={secondary} /> )\n                } \n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import React from 'react';\nimport { Paper, Button, Typography, Box } from '@mui/material';\nimport Carousel from 'react-material-ui-carousel'\nconst EventCarousel = ({ events, selectedEventId, onEventSelect }) => {\n  return (\n    <Carousel>\n      {events.map((event) => (\n        <Paper\n          key={event.ID}\n          elevation={3}\n          sx={{\n            height: 300,\n            width:300,\n            position: 'relative',\n            backgroundRepeat: 'no-repeat',\n            backgroundImage: `url('/v1/images/${event?.image_url}')`,\n            backgroundSize: 'contain',\n            backgroundPosition: 'center',\n          }}\n        >\n          <Box\n            sx={{\n              position: 'absolute',\n              bottom: 0,\n              left: 0,\n              right: 0,\n              bgcolor: 'rgba(0, 0, 0, 0.5)',\n              color: 'white',\n              padding: 2,\n            }}\n          >\n            <Typography variant=\"h6\">{event.name}</Typography>\n            <Typography variant=\"body2\">{event.date}</Typography>\n            <Button\n              variant=\"contained\"\n              color={selectedEventId === event.ID ? \"secondary\" : \"primary\"}\n              onClick={() => onEventSelect(event.ID)}\n              sx={{ mt: 1 }}\n            >\n              {selectedEventId === event.ID ? \"Seleccionado\" : \"Seleccionar Evento\"}\n            </Button>\n          </Box>\n        </Paper>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default EventCarousel;","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Typography,\n    Paper,\n    Snackbar,\n    Alert,\n} from '@mui/material';\nimport MainCard from '../layout/MainCard';\nimport axios from 'axios';\nimport EventCarousel from 'components/EventCarousel';\n\nconst EventRegistration = () => {\n    const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n\n    const [events, setEvents] = useState([]);\n\n    const getEvents = async () => {\n        try {\n            const response = await axios.get('/v1/catalogs/events');\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        getEvents();\n    }, []);\n\n    const handleEventSelection = (event) => {\n        console.log('Event selected:', event);\n        const selectedEvent = events.find((item) => event === item.ID);\n\n        setSnackbar({ open: true, message: 'El evento seleccionado es:'+ selectedEvent.name, severity:'success' });\n\n    }\n\n    return (\n        <MainCard title=\"Inscripción a Evento\" >\n                <Paper elevation={3} style={{ padding: '2rem', marginTop: '2rem', minWidth:'400px' }}>\n                    <Typography variant=\"h6\" gutterBottom>\n                        Completa tu inscripción\n                    </Typography>\n                    <EventCarousel\n                        events={events}\n                        selectedEventId={1}\n                        onEventSelect={(e) =>handleEventSelection(e) }\n                    />\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        style={{ marginTop: '1rem' }}\n                    >\n                        Inscribirse\n                    </Button>\n                </Paper>\n                      <Snackbar\n                        open={snackbar.open}\n                        autoHideDuration={6000}\n                        onClose={() => setSnackbar({ ...snackbar, open: false })}\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                      >\n                        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\n                          {snackbar.message}\n                        </Alert>\n                      </Snackbar>\n        </MainCard>\n    );\n};\n\nexport default EventRegistration;"],"names":["headerSX","mr","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","_objectWithoutProperties","_excluded","theme","useTheme","_jsxs","Card","_objectSpread","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","events","selectedEventId","onEventSelect","Carousel","map","event","Paper","elevation","height","width","position","backgroundRepeat","backgroundImage","concat","image_url","backgroundSize","backgroundPosition","Box","bottom","left","right","bgcolor","color","padding","name","date","Button","ID","onClick","mt","EventRegistration","snackbar","setSnackbar","useState","open","message","severity","setEvents","useEffect","async","response","axios","get","data","error","console","getEvents","MainCard","style","marginTop","minWidth","gutterBottom","EventCarousel","e","log","selectedEvent","find","item","handleEventSelection","type","fullWidth","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert"],"sourceRoot":""}