{"version":3,"file":"static/js/384.9ede40e2.chunk.js","mappings":"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","sources":["pages/UpdatePasswordPage.js","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js","../node_modules/@tabler/icons-react/src/icons/IconEye.ts","../node_modules/@tabler/icons-react/src/icons/IconEyeOff.ts","../node_modules/@tabler/icons-react/src/icons/IconLock.ts"],"sourcesContent":["import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Container,\n  Paper,\n  IconButton,\n  InputAdornment,\n  Snackbar,\n  Alert,\n} from '@mui/material';\nimport { IconEye, IconEyeOff, IconLock } from '@tabler/icons-react';\nimport axios from 'axios';\n\nconst UpdatePasswordPage = () => {\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n\n  const formik = useFormik({\n    initialValues: {\n      currentPassword: '',\n      newPassword: '',\n      confirmPassword: '',\n    },\n    validationSchema: Yup.object({\n      currentPassword: Yup.string().required('La contraseña actual es requerida'),\n      newPassword: Yup.string()\n        .min(8, 'La contraseña debe tener al menos 8 caracteres')\n        .matches(/[a-zA-Z]/, 'La contraseña debe contener al menos una letra')\n        .matches(/[0-9]/, 'La contraseña debe contener al menos un número')\n        .required('La nueva contraseña es requerida'),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('newPassword'), null], 'Las contraseñas deben coincidir')\n        .required('Confirma tu nueva contraseña'),\n    }),\n    onSubmit: async (values) => {\n      try {\n        await axios.post('/v1/security/update-password', {\n          currentPassword: values.currentPassword,\n          newPassword: values.newPassword,\n        });\n        setSnackbar({ open: true, message: 'Contraseña actualizada con éxito', severity: 'success' });\n        formik.resetForm();\n      } catch (error) {\n        setSnackbar({ open: true, message: 'Error al actualizar la contraseña', severity: 'error' });\n      }\n    },\n  });\n\n  const handleTogglePasswordVisibility = (field) => {\n    switch (field) {\n      case 'current':\n        setShowCurrentPassword(!showCurrentPassword);\n        break;\n      case 'new':\n        setShowNewPassword(!showNewPassword);\n        break;\n      case 'confirm':\n        setShowConfirmPassword(!showConfirmPassword);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper elevation={3} sx={{ mt: 8, p: 4 }}>\n        <Typography component=\"h1\" variant=\"h5\" align=\"center\" gutterBottom>\n          Actualizar Contraseña\n        </Typography>\n        <Box component=\"form\" onSubmit={formik.handleSubmit} noValidate sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"currentPassword\"\n            label=\"Contraseña Actual\"\n            type={showCurrentPassword ? 'text' : 'password'}\n            id=\"currentPassword\"\n            autoComplete=\"current-password\"\n            value={formik.values.currentPassword}\n            onChange={formik.handleChange}\n            error={formik.touched.currentPassword && Boolean(formik.errors.currentPassword)}\n            helperText={formik.touched.currentPassword && formik.errors.currentPassword}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconLock size={20} />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => handleTogglePasswordVisibility('current')}>\n                    {showCurrentPassword ? <IconEyeOff size={20} /> : <IconEye size={20} />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"newPassword\"\n            label=\"Nueva Contraseña\"\n            type={showNewPassword ? 'text' : 'password'}\n            id=\"newPassword\"\n            autoComplete=\"new-password\"\n            value={formik.values.newPassword}\n            onChange={formik.handleChange}\n            error={formik.touched.newPassword && Boolean(formik.errors.newPassword)}\n            helperText={formik.touched.newPassword && formik.errors.newPassword}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconLock size={20} />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => handleTogglePasswordVisibility('new')}>\n                    {showNewPassword ? <IconEyeOff size={20} /> : <IconEye size={20} />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"confirmPassword\"\n            label=\"Confirmar Nueva Contraseña\"\n            type={showConfirmPassword ? 'text' : 'password'}\n            id=\"confirmPassword\"\n            autoComplete=\"new-password\"\n            value={formik.values.confirmPassword}\n            onChange={formik.handleChange}\n            error={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n            helperText={formik.touched.confirmPassword && formik.errors.confirmPassword}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <IconLock size={20} />\n                </InputAdornment>\n              ),\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={() => handleTogglePasswordVisibility('confirm')}>\n                    {showConfirmPassword ? <IconEyeOff size={20} /> : <IconEye size={20} />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Actualizar Contraseña\n          </Button>\n        </Box>\n      </Paper>\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\nexport default UpdatePasswordPage;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","'use client';\n\nvar _span;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport Typography from \"../Typography/index.js\";\nimport FormControlContext from \"../FormControl/FormControlContext.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from \"./inputAdornmentClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active,\n  variants: [{\n    props: {\n      variant: 'filled'\n    },\n    style: {\n      [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n        marginTop: 16\n      }\n    }\n  }, {\n    props: {\n      position: 'start'\n    },\n    style: {\n      marginRight: 8\n    }\n  }, {\n    props: {\n      position: 'end'\n    },\n    style: {\n      marginLeft: 8\n    }\n  }, {\n    props: {\n      disablePointerEvents: true\n    },\n    style: {\n      pointerEvents: 'none'\n    }\n  }]\n})));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n  const ownerState = {\n    ...props,\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, {\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref,\n      ...other,\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? (/* notranslate needed while Google Translate will not fix zero-width space issue */_span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          \"aria-hidden\": true,\n          children: \"\\u200B\"\n        }))) : null, children]\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'eye', 'IconEye', [[\"path\",{\"d\":\"M10 12a2 2 0 1 0 4 0a2 2 0 0 0 -4 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M21 12c-2.4 4 -5.4 6 -9 6c-3.6 0 -6.6 -2 -9 -6c2.4 -4 5.4 -6 9 -6c3.6 0 6.6 2 9 6\",\"key\":\"svg-1\"}]]);","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'eye-off', 'IconEyeOff', [[\"path\",{\"d\":\"M10.585 10.587a2 2 0 0 0 2.829 2.828\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M16.681 16.673a8.717 8.717 0 0 1 -4.681 1.327c-3.6 0 -6.6 -2 -9 -6c1.272 -2.12 2.712 -3.678 4.32 -4.674m2.86 -1.146a9.055 9.055 0 0 1 1.82 -.18c3.6 0 6.6 2 9 6c-.666 1.11 -1.379 2.067 -2.138 2.87\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M3 3l18 18\",\"key\":\"svg-2\"}]]);","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'lock', 'IconLock', [[\"path\",{\"d\":\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M8 11v-4a4 4 0 1 1 8 0v4\",\"key\":\"svg-2\"}]]);"],"names":["UpdatePasswordPage","showCurrentPassword","setShowCurrentPassword","useState","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","snackbar","setSnackbar","open","message","severity","formik","useFormik","initialValues","currentPassword","newPassword","confirmPassword","validationSchema","Yup","required","min","matches","oneOf","onSubmit","async","axios","post","values","resetForm","error","handleTogglePasswordVisibility","field","_jsxs","Container","component","maxWidth","children","Paper","elevation","sx","mt","p","_jsx","Typography","variant","align","gutterBottom","Box","handleSubmit","noValidate","TextField","margin","fullWidth","name","label","type","id","autoComplete","value","onChange","handleChange","touched","Boolean","errors","helperText","InputProps","startAdornment","InputAdornment","position","IconLock","size","endAdornment","IconButton","onClick","IconEyeOff","IconEye","Button","mb","Snackbar","autoHideDuration","onClose","_objectSpread","anchorOrigin","vertical","horizontal","Alert","width","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_span","InputAdornmentRoot","styled","overridesResolver","props","styles","ownerState","root","concat","capitalize","disablePointerEvents","memoTheme","_ref","theme","display","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","variants","style","inputAdornmentClasses","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useDefaultProps","className","disableTypography","variantProp","other","_objectWithoutProperties","muiFormControl","useFormControl","classes","slots","composeClasses","useUtilityClasses","FormControlContext","Provider","as","clsx","createReactComponent"],"sourceRoot":""}