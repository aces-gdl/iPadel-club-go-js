{"version":3,"file":"static/js/262.f57b2e6a.chunk.js","mappings":"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","sources":["layout/MainCard.js","components/EventCarousel.js","pages/EventRegistration.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { forwardRef } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@mui/material';\n\n// constant\nconst headerSX = {\n    '& .MuiCardHeader-action': { mr: 0 }\n};\n\n// ==============================|| CUSTOM MAIN CARD ||============================== //\n\nconst MainCard = forwardRef(\n    (\n        {\n            border = true,\n            boxShadow,\n            children,\n            content = true,\n            contentClass = '',\n            contentSX = {},\n            darkTitle,\n            secondary,\n            shadow,\n            sx = {},\n            title,\n            ...others\n        },\n        ref\n    ) => {\n        const theme = useTheme();\n\n        return (\n            <Card\n                ref={ref}\n                {...others}\n                sx={{\n                    border: border ? '1px solid' : 'none',\n                    borderColor: theme.palette.primary[200] + 25,\n                    ':hover': {\n                        boxShadow: boxShadow ? shadow || '0 2px 14px 0 rgb(32 40 45 / 8%)' : 'inherit'\n                    },\n                    ...sx\n                }}\n            >\n                {/* card header and action */}\n                {title && \n                    ( <CardHeader sx={headerSX} title={ darkTitle? <Typography variant=\"h3\">{title}</Typography> : title } action={secondary} /> )\n                } \n\n                {/* content & header divider */}\n                {title && <Divider />}\n\n                {/* card content */}\n                {content && (\n                    <CardContent sx={contentSX} className={contentClass}>\n                        {children}\n                    </CardContent>\n                )}\n                {!content && children}\n            </Card>\n        );\n    }\n);\n\nMainCard.propTypes = {\n    border: PropTypes.bool,\n    boxShadow: PropTypes.bool,\n    children: PropTypes.node,\n    content: PropTypes.bool,\n    contentClass: PropTypes.string,\n    contentSX: PropTypes.object,\n    darkTitle: PropTypes.bool,\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    shadow: PropTypes.string,\n    sx: PropTypes.object,\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\n};\n\nexport default MainCard;\n","import React from 'react';\nimport { Paper, Button, Typography, Box } from '@mui/material';\nimport Carousel from 'react-material-ui-carousel'\nimport dayjs from 'dayjs';\nconst EventCarousel = ({ events, selectedEventId, onEventSelect }) => {\n  let myDate = dayjs(events[0]?.start_date).format('dddd, MMMM D, YYYY');;\n  return (\n    <Carousel\n      autoPlay={false}\n      navButtonsAlwaysVisible={true}\n      height={600}\n      \n    >\n      {events.map((event) => (\n        <Box paddingTop={1}>\n          <Box\n            key={event.ID}\n            elevation={3}\n            sx={{\n              minHeight: 430,\n              minWidth: '100%',\n              backgroundRepeat: 'no-repeat',\n              backgroundImage: `url('/v1/images/${event?.image_url}')`,\n              backgroundSize: 'contain',\n              backgroundPosition: 'center',\n            }}\n          >\n\n          </Box>\n          <Box\n            paddingTop={5}\n            marginX={2}\n          >\n            <Typography variant=\"h6\" fontWeight={800}>{event.name}</Typography>\n            <Box display={'flex'} flexDirection={'row'}>\n              <Typography variant='body2' fontWeight={800} component={'p'}>Club: </Typography>\n              <Typography variant=\"body2\" > {event.club.name}</Typography>\n            </Box>       \n            <Box display={'flex'} flexDirection={'row'}>\n            <Typography variant='body2' fontWeight={800} component={'p'}>Del: </Typography>\n              <Typography variant=\"body2\" > {dayjs(event.start_date).format(\"DD/MM\")}</Typography>\n              <Typography variant='body2' fontWeight={800} component={'p'}> al: </Typography>\n              <Typography variant=\"body2\" > {dayjs(event.end_date).format(\"DD/MM\")}</Typography>\n            </Box>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color={\"primary\"}\n              onClick={() => onEventSelect(event.ID)}\n              sx={{ mt: 1 }}\n            >\n              Inscribirme\n            </Button>\n          </Box>\n        </Box>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default EventCarousel;","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Typography,\n    Paper,\n    Snackbar,\n    Alert,\n    Grid2,\n} from '@mui/material';\nimport MainCard from '../layout/MainCard';\nimport axios from 'axios';\nimport EventCarousel from 'components/EventCarousel';\n\nconst EventRegistration = () => {\n    const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n\n    const [events, setEvents] = useState([]);\n\n    const getEvents = async () => {\n        try {\n            const response = await axios.get('/v1/catalogs/events');\n            setEvents(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    useEffect(() => {\n        getEvents();\n    }, []);\n\n    const handleEventSelection = async (event) => {\n        console.log('Event selected:', event);\n        const selectedEvent = events.find((item) => event === item.ID);\n        try {\n            let response = await axios.post('/v1/inscriptions', { \n                EventId: selectedEvent.ID, \n                CategoryID: 1,  \n                PersonID: JSON.parse(localStorage.getItem('user')).ID, \n            });\n             console.log('Response:', response.data);\n            setSnackbar({ open: true, message: 'El evento seleccionado es:' + selectedEvent.name, severity: 'success' });\n        } catch (error) {\n\n        }\n\n    }\n\n    return (\n        <MainCard title=\"Eventos disponibles\" >\n\n            <Paper elevation={3} style={{ minWidth: '350px', minHeight: '620px', marginTop: 1 }}>\n                <EventCarousel\n                    events={events}\n                    selectedEventId={1}\n                    onEventSelect={(e) => handleEventSelection(e)}\n                />\n\n            </Paper>\n\n            <Snackbar\n                open={snackbar.open}\n                autoHideDuration={6000}\n                onClose={() => setSnackbar({ ...snackbar, open: false })}\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n            >\n                <Alert onClose={() => setSnackbar({ ...snackbar, open: false })} severity={snackbar.severity} sx={{ width: '100%' }}>\n                    {snackbar.message}\n                </Alert>\n            </Snackbar>\n        </MainCard>\n    );\n};\n\nexport default EventRegistration;"],"names":["headerSX","mr","forwardRef","_ref","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","_objectWithoutProperties","_excluded","theme","useTheme","_jsxs","Card","_objectSpread","borderColor","palette","primary","_jsx","CardHeader","Typography","variant","action","Divider","CardContent","className","_events$","events","selectedEventId","onEventSelect","dayjs","start_date","format","Carousel","autoPlay","navButtonsAlwaysVisible","height","map","event","Box","paddingTop","elevation","minHeight","minWidth","backgroundRepeat","backgroundImage","concat","image_url","backgroundSize","backgroundPosition","ID","marginX","fontWeight","name","display","flexDirection","component","club","end_date","Button","fullWidth","color","onClick","mt","EventRegistration","snackbar","setSnackbar","useState","open","message","severity","setEvents","useEffect","async","response","axios","get","data","error","console","getEvents","MainCard","Paper","style","marginTop","EventCarousel","e","log","selectedEvent","find","item","post","EventId","CategoryID","PersonID","JSON","parse","localStorage","getItem","handleEventSelection","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","width"],"sourceRoot":""}